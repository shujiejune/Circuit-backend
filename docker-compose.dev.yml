services:
  api:
    container_name: circuit_api_dev
    build:
      context: .
      # Explicitly target the 'builder' stage, which has Go installed.
      target: builder
    ports:
      - "${SERVER_PORT:-8080}:8080"
    volumes:
      # Mount local source code into the container.
      - .:/app
    
    # Override the Dockerfile's CMD to run our app in development mode.
    # Using 'go run' allows us to see code changes without rebuilding the image.
    command: go run ./cmd/api/main.go
      
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - CLIENT_ORIGIN=${CLIENT_ORIGIN}
      - GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
      - GOOGLE_OAUTH_REDIRECT_URL=${GOOGLE_OAUTH_REDIRECT_URL}
      - GOOGLE_MAP_API_KEY=${GOOGLE_MAP_API_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - EMAIL_FROM_ADDRESS=${EMAIL_FROM_ADDRESS}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=${DB_SSLMODE}

    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgis/postgis:16-3.5-alpine
    container_name: circuit_db_dev
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_db_data:
